{
  "name": "IGCMenu",
  "tagline": "Grid and Circular Menu for iOS",
  "body": "# IGCMenu\r\nIGCMenu library gives easy way to create **Grid** and **Circular** menu in app.\r\n\r\nThis is light weight and highly customisable menu.Support iOS 7 and above.\r\n\r\n<table>\r\n  <tr>\r\n    <th>Grid Menu</th>\r\n    <th>Circular Menu</th>\r\n  </tr>\r\n  <tr>\r\n    <td><img src=\"https://raw.githubusercontent.com/sunilsharma08/IGCMenu/develop/Grid_Menu_Demo.gif\" alt=\"Grid Menu\" width=\"320\" height=\"568\"/></td>\r\n    <td><img src=\"https://raw.githubusercontent.com/sunilsharma08/IGCMenu/develop/Circular_Menu_Demo.gif\" alt=\"Circular Menu\" width=\"320\" height=\"568\"/></td>\r\n  </tr>\r\n</table>\r\n\r\n#Features\r\n* Grid Menu\r\n* Circular Menu\r\n* Enable/Diable menu background\r\n* Menu items can be without images/names\r\n\r\n\r\n#How to use\r\n\r\nDrag the folder \"IGCMenu\" with the source files into your project.\r\n\r\n##Import\r\n ```objc\r\n #import \"IGCMenu.h\"\r\n ```\r\n \r\n##Conform Protocol\r\n **Optional** if you don't want to get notify for menu items selection then skip this step.\r\n \r\n Conform to IGCMenuDelegate\r\n \r\n ```objc\r\n @interface ViewController : UIViewController<IGCMenuDelegate>\r\n ```\r\n \r\n##Create Instance Variable\r\n\r\nCreate instance variable of type IGCMenu.\r\n\r\n```objc\r\n@implementation ViewController{\r\n    IGCMenu *igcMenu;\r\n}\r\n```\r\n##Create instance of class IGCMenu and configure attributes\r\n\r\n```objc\r\nif (igcMenu == nil) {\r\n      igcMenu = [[IGCMenu alloc] init];\r\n  }\r\n  igcMenu.menuButton = self.menuButton;   //Pass refernce of menu button\r\n  igcMenu.menuSuperView = self.view;      //Pass reference of menu button super view\r\n  igcMenu.disableBackground = YES;        //Enable/disable menu background\r\n  igcMenu.numberOfMenuItem = 5;           //Number of menu items to display\r\n\r\n/* Optional\r\nPass name of menu items\r\n**/\r\n  igcMenu.menuItemsNameArray = [NSArray arrayWithObjects:@\"Home\",@\"Like\",@\"Search\",@\"User\",@\"Buy\",nil];\r\n  \r\n/*Optional\r\nPass color of menu items\r\n**/\r\nUIColor *homeBackgroundColor = [UIColor colorWithRed:(33/255.0) green:(180/255.0) blue:(227/255.0) alpha:1.0];\r\nUIColor *searchBackgroundColor = [UIColor colorWithRed:(139/255.0) green:(116/255.0) blue:(240/255.0) alpha:1.0];\r\nUIColor *favoritesBackgroundColor = [UIColor colorWithRed:(241/255.0) green:(118/255.0) blue:(121/255.0) alpha:1.0];\r\nUIColor *userBackgroundColor = [UIColor colorWithRed:(184/255.0) green:(204/255.0) blue:(207/255.0) alpha:1.0];\r\nUIColor *buyBackgroundColor = [UIColor colorWithRed:(169/255.0) green:(59/255.0) blue:(188/255.0) alpha:1.0];\r\nigcMenu.menuBackgroundColorsArray = [NSArray arrayWithObjects:homeBackgroundColor,favoritesBackgroundColor,searchBackgroundColor,userBackgroundColor, buyBackgroundColor,nil];\r\n\r\n/*Optional\r\nPass menu items icons\r\n**/\r\nigcMenu.menuImagesNameArray = [NSArray arrayWithObjects:@\"home.png\",@\"favourite.png\",@\"search.png\",@\"user.png\",@\"buy.png\",nil];\r\n\r\n/*Optional if you don't want to get notify for menu items selection\r\nconform delegate\r\n**/\r\nigcMenu.delegate = self;\r\n```\r\nArray of name,color and icons will appear in the same order.\r\n\r\n##Show/Hide menu\r\n\r\nOn menu button press you can show/hide menu items by calling methods below.\r\n\r\nTo show/hide **circular menu**\r\n```objc\r\n[igcMenu showCircularMenu];  //Show circular menu\r\n[igcMenu hideCircularMenu];  //Hide circular menu\r\n```\r\nTo show/hide **grid menu**\r\n```objc\r\n[igcMenu showGridMenu];     //Show grid menu\r\n[igcMenu hideGridMenu];     //Hide grid menu\r\n```\r\n\r\n##Delegate Implementation\r\nTo get notify about menu item selection you must implement this method.\r\n```objc\r\n- (void)igcMenuSelected:(NSString *)selectedMenuName atIndex:(NSInteger)index{\r\n//Perform any action on selection of menu item\r\n}\r\n```\r\nOn selecting any menu item it gives selected menu item name(if present otherwise nil) and index of menu item.Index of menu item start from 0.\r\n\r\n#Customisation\r\n```objc\r\n@property (nonatomic) NSInteger numberOfMenuItem;   //Number of menu items to show\r\n@property (nonatomic) CGFloat menuRadius;           //Radius for circular menu\r\n@property (weak,nonatomic) UIButton *menuButton;    //Menu button reference\r\n@property (weak,nonatomic) UIView *menuSuperView;   //Menu button super view reference\r\n@property (strong,nonatomic) NSArray *menuItemsNameArray;        //Menu items name array,it can be empty\r\n@property (strong,nonatomic) NSArray *menuBackgroundColorsArray; //Menu items background color,it can be empty, default color is white\r\n@property (strong,nonatomic) NSArray *menuImagesNameArray;       //Menu item icons array it can be empty\r\n@property (nonatomic) BOOL disableBackground;       //Disable background view, default is TRUE\r\n@property int maxColumn;                            //Maximium number of column,default is 3\r\n@property int menuHeight;                           //height = width ,default is 65\r\n\r\n```\r\n#Note\r\nThis library does not customise menu button(in example at bottom in dark blue background color) like making round,setting background color,changing icon like + and x.\r\nThis is left on you to customise.You can take refernce form example if any help needed.\r\nCode to make button circle is:\r\n```objc\r\nself.menuButton.clipsToBounds = YES;\r\nself.menuButton.layer.cornerRadius = self.menuButton.frame.size.height/2;\r\n```\r\n\r\n#Let us know!\r\n\r\nWe will be happy if you sent us links to your projects where you use our library. And do let us know if you have any questions or suggestion regarding anything.\r\n\r\n#License\r\nIGCMenu is available under the [MIT license](https://raw.githubusercontent.com/sunilsharma08/IGCMenu/develop/LICENSE.md).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}